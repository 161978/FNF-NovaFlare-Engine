name: Linux
on: workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        dagnuver: [11]
        box64: [BOX64, NOBOX64]
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Restore Previous Cache
        if: ${{ always() }}
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib
            ~/haxelib
            export/linux/haxe
            export/linux/obj
          key: cache-linux-build-gcc${{ matrix.dagnuver }}-${{ matrix.box64 }}
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Install Libraries
        run: |
          sudo apt-get -qq install libvlc-dev libvlccore-dev g++-${{ matrix.dagnuver }} gcc-${{ matrix.dagnuver }}
          sudo rm /usr/bin/gcc && sudo rm /usr/bin/g++ && sudo ln -s /usr/bin/gcc-${{ matrix.dagnuver }} /usr/bin/gcc && sudo ln -s /usr/bin/g++-${{ matrix.dagnuver }} /usr/bin/g++
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp.git
          haxelib install hmm --quiet
          haxelib run hmm install > /dev/null
      - name: Info
        run: haxe --version && haxelib list && gcc --version && g++ --version
      - name: Compile
        run: haxelib run lime build Project.xml linux -64 -release -D ${{ matrix.box64 }}
      - name: Clear Previous Cache
        if: ${{ always() }}
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-linux-build-gcc${{ matrix.dagnuver }}-${{ matrix.box64 }}") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }
      - name: Save Current Cache
        if: ${{ always() }}
        id: cache-build-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib
            ~/haxelib
            export/linux/haxe
            export/linux/obj
          key: cache-linux-build-gcc${{ matrix.dagnuver }}-${{ matrix.box64 }}
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild-gcc${{ matrix.dagnuver }}-${{ matrix.box64 }}
          path: 'export/release/linux/bin'
